apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'androidx.navigation.safeargs.kotlin'

android {
    compileSdkVersion 30
    buildToolsVersion "29.0.3"

    defaultConfig {
        applicationId "com.kryptkode.farmz"
        minSdkVersion 21
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"

        vectorDrawables.useSupportLibrary true
        multiDexEnabled true
        testInstrumentationRunner "com.kryptkode.farmz.app.CustomTestRunner"

        buildConfigField("String", "BASE_URL", "\"https://theagromall.com/api/v2/\"")

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = ["room.schemaLocation":
                                     "$projectDir/schemas".toString()]
            }
        }
    }

    sourceSets {
        androidTest.assets.srcDirs += files("$projectDir/schemas".toString())
    }

    buildTypes {
        release {
            minifyEnabled true
            zipAlignEnabled true
            shrinkResources true
            debuggable = false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    buildFeatures {
        viewBinding true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = "1.8"
        freeCompilerArgs += ["-Xopt-in=kotlin.RequiresOptIn"]
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:${kotlin_version}"

    implementation "androidx.core:core-ktx:1.3.2"

    def coroutineVersion = "1.3.9"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:${coroutineVersion}"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:${coroutineVersion}"

    def appCompatVersion = "1.2.0"
    implementation "androidx.appcompat:appcompat:${appCompatVersion}"
    implementation "androidx.vectordrawable:vectordrawable:1.1.0"
    implementation 'androidx.swiperefreshlayout:swiperefreshlayout:1.2.0-alpha01'

    def lifeCycleVersion = '2.2.0'
    implementation "androidx.lifecycle:lifecycle-extensions:$lifeCycleVersion"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifeCycleVersion"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$lifeCycleVersion"
    implementation "androidx.lifecycle:lifecycle-common-java8:$lifeCycleVersion"

    def navVersion = "2.3.1"
    implementation "androidx.navigation:navigation-fragment-ktx:$navVersion"
    implementation "androidx.navigation:navigation-ui-ktx:$navVersion"

    implementation "com.google.android.material:material:1.2.1"
    implementation "androidx.constraintlayout:constraintlayout:2.0.2"

    def roomVersion = '2.3.0-alpha03'
    implementation "androidx.room:room-runtime:$roomVersion"
    implementation "androidx.room:room-ktx:$roomVersion"
    kapt "androidx.room:room-compiler:$roomVersion"

    def pagingVersion = '3.0.0-alpha07'
    implementation "androidx.paging:paging-runtime-ktx:$pagingVersion"


    def retrofitVersion = '2.9.0'
    implementation "com.squareup.retrofit2:retrofit:$retrofitVersion"
    implementation "com.squareup.retrofit2:converter-moshi:$retrofitVersion"
    implementation "com.squareup.retrofit2:retrofit-mock:$retrofitVersion"

    def moshiVersion = "1.9.2"
    implementation "com.squareup.moshi:moshi:$moshiVersion"
    kapt "com.squareup.moshi:moshi-kotlin-codegen:$moshiVersion"

    def okhttpLoggingInterceptorVersion = '4.7.2'
    implementation "com.squareup.okhttp3:logging-interceptor:$okhttpLoggingInterceptorVersion"

    implementation "androidx.multidex:multidex:2.0.1"

    implementation "com.jakewharton.timber:timber:4.7.1"

    def permissionsDispatcherVersion = "4.7.0"
    implementation "org.permissionsdispatcher:permissionsdispatcher:${permissionsDispatcherVersion}"
    kapt "org.permissionsdispatcher:permissionsdispatcher-processor:${permissionsDispatcherVersion}"


    def daggerVersion = "2.27"
    implementation "com.google.dagger:dagger-android:$daggerVersion"
    kapt "com.google.dagger:dagger-compiler:$daggerVersion"

    implementation "com.jakewharton.threetenabp:threetenabp:1.2.4"

    implementation "com.github.ybq:Android-SpinKit:1.4.0"

    implementation 'de.hdodenhof:circleimageview:3.1.0'

    //Image loading
    implementation "io.coil-kt:coil:0.9.5"

    //DataStore
    implementation "androidx.datastore:datastore-preferences:1.0.0-alpha02"

    implementation 'com.facebook.shimmer:shimmer:0.5.0'


    def espressoVersion = '3.3.0'
    implementation "androidx.test.espresso:espresso-idling-resource:$espressoVersion"

    // unit testing
    testImplementation "junit:junit:4.13.1"
    testImplementation "android.arch.core:core-testing:1.1.1"

    def mockkVersion = "1.10.0"
    testImplementation "io.mockk:mockk:$mockkVersion"

    def truthVersion = "1.0.1"
    testImplementation "com.google.truth:truth:$truthVersion"

    testImplementation "org.jetbrains.kotlin:kotlin-test-junit:$kotlin_version"
    testImplementation ("org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutineVersion"){
        exclude group: "org.jetbrains.kotlinx", module: "kotlinx-coroutines-debug"
    }
    //noinspection GradleDependency
    testImplementation "com.squareup.okhttp3:mockwebserver:3.9.0"
    testImplementation "com.google.dagger:dagger:$daggerVersion"
    kaptTest "com.google.dagger:dagger-compiler:$daggerVersion"

    testImplementation "androidx.paging:paging-common-ktx:$pagingVersion"

    def fragment_version = "1.3.0-beta01"
    debugImplementation "androidx.fragment:fragment-testing:$fragment_version"


    //instrumentation testing
    androidTestImplementation "org.jetbrains.kotlin:kotlin-test-junit:$kotlin_version"
    androidTestImplementation ("org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutineVersion"){
        exclude group: "org.jetbrains.kotlinx", module: "kotlinx-coroutines-debug"
    }

    androidTestImplementation "androidx.test:runner:1.3.1-alpha01"
    androidTestImplementation "android.arch.core:core-testing:1.1.1"

    androidTestImplementation "androidx.test.espresso:espresso-core:$espressoVersion"
    androidTestImplementation "androidx.test.espresso:espresso-contrib:$espressoVersion"
    androidTestImplementation "androidx.test.espresso:espresso-intents:$espressoVersion"

    def testRunner = '1.1.1'
    androidTestImplementation "androidx.test:runner:$testRunner"
    androidTestImplementation "androidx.test:rules:1.3.0"

    androidTestImplementation "androidx.test.ext:junit:1.1.2"
    androidTestImplementation "io.mockk:mockk-android:$mockkVersion"
    androidTestImplementation "androidx.room:room-testing:$roomVersion"

    androidTestImplementation "com.google.truth:truth:$truthVersion"

    androidTestImplementation "com.google.dagger:dagger:$daggerVersion"
    kaptAndroidTest "com.google.dagger:dagger-compiler:$daggerVersion"
}
